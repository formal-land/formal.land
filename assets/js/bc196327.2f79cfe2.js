"use strict";(self.webpackChunkformal_land=self.webpackChunkformal_land||[]).push([[8820],{19653:(o,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var e=r(74848),i=r(28453);const n={title:"\u25fc\ufe0f A formal verification tool for Noir \u2013 2",tags:["Noir","smart contract","circuits"],authors:[]},a=void 0,s={permalink:"/blog/2024/11/15/tool-for-noir-2",source:"@site/blog/2024-11-15-tool-for-noir-2.md",title:"\u25fc\ufe0f A formal verification tool for Noir \u2013 2",description:"In this blog post, we continue our presentation about our formal verification tool for \u25fc\ufe0f&nbsp;Noir programs coq-of-noir. Noir is a Rust-like language to write programs designed to run efficiently in zero-knowledge environments. It has a growing popularity and a focus on providing optimized libraries for common needs, such as a base64 library using \ud83e\udde0&nbsp;field arithmetic that we use in this series of blog posts.",date:"2024-11-15T00:00:00.000Z",formattedDate:"November 15, 2024",tags:[{label:"Noir",permalink:"/blog/tags/noir"},{label:"smart contract",permalink:"/blog/tags/smart-contract"},{label:"circuits",permalink:"/blog/tags/circuits"}],readingTime:8.895,hasTruncateMarker:!0,authors:[],frontMatter:{title:"\u25fc\ufe0f A formal verification tool for Noir \u2013 2",tags:["Noir","smart contract","circuits"],authors:[]},unlisted:!1,prevItem:{title:"\ud83e\udd84 How does formal verification of smart contracts work?",permalink:"/blog/2024/12/20/what-is-formal-verification-of-smart-contracts"},nextItem:{title:"\ud83e\udd80 Example of verification for the Move's checker of Sui",permalink:"/blog/2024/11/14/sui-move-checker-abstract-stack"}},c={authorsImageUrls:[]},l=[];function f(o){const t={a:"a",p:"p",...(0,i.R)(),...o.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.p,{children:["In this blog post, we continue our presentation about our formal verification tool for ",(0,e.jsx)(t.a,{href:"https://noir-lang.org/",children:"\u25fc\ufe0f\xa0Noir"})," programs ",(0,e.jsx)(t.a,{href:"https://github.com/formal-land/coq-of-noir",children:"coq-of-noir"}),". Noir is a Rust-like language to write programs designed to run efficiently in zero-knowledge environments. It has a growing popularity and a focus on providing optimized libraries for common needs, such as a ",(0,e.jsx)(t.a,{href:"https://github.com/noir-lang/noir_base64",children:"base64"})," library using \ud83e\udde0\xa0field arithmetic that we use in this series of blog posts."]}),"\n",(0,e.jsx)(t.p,{children:"Here we present the details of our semantic rules to show that a Noir program has an expected behavior for any possible parameters. We focus, in particular, on our memory-handling approach and the definition of loops."})]})}function u(o={}){const{wrapper:t}={...(0,i.R)(),...o.components};return t?(0,e.jsx)(t,{...o,children:(0,e.jsx)(f,{...o})}):f(o)}},28453:(o,t,r)=>{r.d(t,{R:()=>a,x:()=>s});var e=r(96540);const i={},n=e.createContext(i);function a(o){const t=e.useContext(n);return e.useMemo((function(){return"function"==typeof o?o(t):{...t,...o}}),[t,o])}function s(o){let t;return t=o.disableParentContext?"function"==typeof o.components?o.components(i):o.components||i:a(o.components),e.createElement(n.Provider,{value:t},o.children)}}}]);