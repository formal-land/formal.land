"use strict";(self.webpackChunkformal_land=self.webpackChunkformal_land||[]).push([[3255],{35510:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=n(74848),i=n(28453);const r={title:"\ud83e\udd84 Mutually recursive functions with notation",tags:["recursion","notation","mutual"],authors:[]},s=void 0,a={permalink:"/blog/2024/12/26/mutually-recursive-functions-with-notation",source:"@site/blog/2024-12-26-mutually-recursive-functions-with-notation.md",title:"\ud83e\udd84 Mutually recursive functions with notation",description:"In this blog post, we present a technique with the &nbsp;Rocq/Coq theorem prover to define mutually recursive functions using a notation. This is sometimes convenient for types defined using a container type, such as types depending on a list of itself.",date:"2024-12-26T00:00:00.000Z",formattedDate:"December 26, 2024",tags:[{label:"recursion",permalink:"/blog/tags/recursion"},{label:"notation",permalink:"/blog/tags/notation"},{label:"mutual",permalink:"/blog/tags/mutual"}],readingTime:3.735,hasTruncateMarker:!0,authors:[],frontMatter:{title:"\ud83e\udd84 Mutually recursive functions with notation",tags:["recursion","notation","mutual"],authors:[]},unlisted:!1,prevItem:{title:"\ud83e\udd16 Annotating what we are doing for an LLM to pick up",permalink:"/blog/2025/01/06/annotating-what-we-are-doing"},nextItem:{title:"\ud83d\udc7b Translation of Circom to Coq",permalink:"/blog/2024/12/20/translation-of-circom-to-coq"}},u={authorsImageUrls:[]},c=[];function l(t){const e={a:"a",p:"p",...(0,i.R)(),...t.components};return(0,o.jsxs)(e.p,{children:["In this blog post, we present a technique with the ",(0,o.jsxs)(e.a,{href:"https://rocq-prover.org/",children:[(0,o.jsx)("img",{src:"https://raw.githubusercontent.com/coq/rocq-prover.org/refs/heads/main/rocq-id/logos/SVG/icon-rocq-orange.svg",height:"18px"}),"\xa0Rocq/Coq"]})," theorem prover to define mutually recursive functions using a notation. This is sometimes convenient for types defined using a container type, such as types depending on a list of itself."]})}function p(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(l,{...t})}):l(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>a});var o=n(96540);const i={},r=o.createContext(i);function s(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),o.createElement(r.Provider,{value:e},t.children)}}}]);