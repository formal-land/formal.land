"use strict";(self.webpackChunkformal_land=self.webpackChunkformal_land||[]).push([[7705],{13190:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=n(74848),i=n(28453);const a={title:"\ud83e\udd80 Functional specification of the ADD instruction of the EVM",tags:["Rust","EVM","coq-of-rust","functional specification"],authors:["guillaume_claret"]},s=void 0,c={permalink:"/blog/2025/07/06/functional-specification-add",source:"@site/blog/2025-07-06-functional-specification-add.md",title:"\ud83e\udd80 Functional specification of the ADD instruction of the EVM",description:"In this blog post, we present how we specify and verify the implementation of the ADD instruction of the EVM virtual machine in Rust.",date:"2025-07-06T00:00:00.000Z",formattedDate:"July 6, 2025",tags:[{label:"Rust",permalink:"/blog/tags/rust"},{label:"EVM",permalink:"/blog/tags/evm"},{label:"coq-of-rust",permalink:"/blog/tags/coq-of-rust"},{label:"functional specification",permalink:"/blog/tags/functional-specification"}],readingTime:4.82,hasTruncateMarker:!0,authors:[{name:"Guillaume Claret",url:"https://github.com/clarus",imageURL:"https://github.com/clarus.png",key:"guillaume_claret"}],frontMatter:{title:"\ud83e\udd80 Functional specification of the ADD instruction of the EVM",tags:["Rust","EVM","coq-of-rust","functional specification"],authors:["guillaume_claret"]},unlisted:!1,prevItem:{title:"\ud83e\udd77 Beginning of a formal verification tool for LLZK",permalink:"/blog/2025/07/28/llzk-to-rocq-beginning"},nextItem:{title:"\ud83e\udd80 Beginning of translation of OpenVM to Rocq",permalink:"/blog/2025/06/15/beginning-of-openvm-to-rocq"}},r={authorsImageUrls:[void 0]},l=[];function u(t){const e={a:"a",p:"p",...(0,i.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["In this blog post, we present how we specify and verify the implementation of the ADD instruction of the ",(0,o.jsx)(e.a,{href:"https://www.evm.codes/",children:"EVM"})," virtual machine in Rust."]}),"\n",(0,o.jsx)(e.p,{children:"We give a functional specification, meaning that we show the implementation to be equivalent to an idealized version written in the Rocq language. As the Rust code for this instruction involves rather advanced features of Rust, the same techniques could apply to verify a large set of Rust programs."})]})}function f(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>c});var o=n(96540);const i={},a=o.createContext(i);function s(t){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),o.createElement(a.Provider,{value:e},t.children)}}}]);